#!groovy
import uk.gov.hmcts.contino.GithubAPI

@Library("Infrastructure")

def type = "nodejs"
def product = "pcq"
def component = "frontend"
def branchesToSync = ['demo','ithc', 'perftest']

def secrets = [
  'pcq-${env}': [
    secret('probate-token-key', 'PROBATE_TOKEN_KEY')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withPipeline(type, product, component) {

  onPR {
    def githubApi = new GithubAPI(this)
    if (!githubApi.getLabelsbyPattern(env.BRANCH_NAME, "keep-helm")) {
        enableCleanupOfHelmReleaseOnSuccess()
    }
  }

  afterAlways('build') {
    sh 'yarn setup'
  }

  enableAksStagingDeployment()
  disableLegacyDeployment()
  loadVaultSecrets(secrets)
  // enableSlackNotifications('#pcq-builds')
  syncBranchesWithMaster(branchesToSync)
  afterAlways('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }

  before('functionalTest:preview') {
    //This is to force the loading of preview.yaml instead of testing.yaml in PRs
    env.NODE_CONFIG_ENV = 'preview'
  }

  afterAlways('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }

}
