#!groovy

properties([
// H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
pipelineTriggers([cron('H 05 * * *')]),
parameters([
        string(name: 'URL_TO_TEST', defaultValue: 'https://pcq.aat.platform.hmcts.net', description: 'The URL you want to run these tests against'),
        string(name: 'PCQ_SERVICE_URL', defaultValue: 'http://pcq-frontend-aat.service.core-compute-aat.internal', description: 'The URL of pcq service callbacks'),
        string(name: 'SECURITY_RULES', defaultValue: 'https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf', description: 'The security rules to use'),
])
])

@Library("Infrastructure")

def type = "nodejs"
def product = "pcq"
def component = "frontend"

def secrets = [
  'pcq-${env}': [
    secret('jwt-secret', 'JWT_SECRET'),
    secret('probate-token-key', 'PROBATE_TOKEN_KEY')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withNightlyPipeline(type, product, component) {
    env.TEST_URL = params.URL_TO_TEST
    env.URL_FOR_SECURITY_SCAN = params.PCQ_SERVICE_URL
    loadVaultSecrets(secrets)
    enableMutationTest();
    enableSlackNotifications('#pcq-builds')
    enableFortifyScan()
    enableSecurityScan()
    enableCrossBrowserTest()
    enableFullFunctionalTest(20)

    after('fortify-scan') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
    }

    after('crossBrowserTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

    after('fullFunctionalTest') {
        publishHTML target: [
                allowMissing : true,
                alwaysLinkToLastBuild: true,
                keepAll : true,
                reportDir : "output",
                reportFiles : "PCQ-e2e-result.html",
                reportName : "PCQ E2E functional tests result"
        ]
    }
}
